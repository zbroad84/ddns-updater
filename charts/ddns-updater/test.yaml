---
# Source: ddns-updater/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dns-ddns-updater
  labels:
    helm.sh/chart: ddns-updater-0.1.6
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: ddns-updater/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ddns-updater-config
data:
  BACKUP_DIRECTORY: "/updater/data/backups"
  BACKUP_PERIOD: "168h15m"
  CONFIG_FILEPATH: "/updater/data/config.json"
  DATADIR: "/updater/data"
  HEALTH_HEALTHCHECKSIO_BASE_URL: "https://hc-ping.com"
  HEALTH_HEALTHCHECKSIO_UUID: ""
  HEALTH_SERVER_ADDRESS: "127.0.0.1:9999"
  HTTP_TIMEOUT: "10s"
  LISTENING_ADDRESS: ":8000"
  LOG_CALLER: "hidden"
  LOG_LEVEL: "info"
  PERIOD: "5m"
  PUBLICIPV4_HTTP_PROVIDERS: "all"
  PUBLICIPV6_HTTP_PROVIDERS: "all"
  PUBLICIP_DNS_PROVIDERS: "all"
  PUBLICIP_DNS_TIMEOUT: "3s"
  PUBLICIP_FETCHERS: "all"
  PUBLICIP_HTTP_PROVIDERS: "all"
  RESOLVER_ADDRESS: "1.1.1.1:53"
  ROOT_URL: "/"
  SERVER_ENABLED: "true"
  SHOUTRRR_ADDRESSES: "[]"
  SHOUTRRR_DEFAULT_TITLE: "DDNS Updater"
  TZ: "America/New_York"
  UMASK: "1000"
  UPDATE_COOLDOWN_PERIOD: "5m"
---
# Source: ddns-updater/templates/pv.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: dns-ddns-updater
  labels:
    helm.sh/chart: ddns-updater-0.1.6
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual-hostpath
  hostPath:
    path: /updater/data
---
# Source: ddns-updater/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dns-ddns-updater
  # Finalizer is for safety against manual Application delete
  finalizers:
  - kubernetes.io/pvc-protection
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: Retain
  storageClassName: manual-hostpath
---
# Source: ddns-updater/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dns-ddns-updater
  labels:
    helm.sh/chart: ddns-updater-0.1.6
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
---
# Source: ddns-updater/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hc-dns-ddns-updater
  labels:
    helm.sh/chart: ddns-updater-0.1.6
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9999
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
---
# Source: ddns-updater/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-ddns-updater
  labels:
    helm.sh/chart: ddns-updater-0.1.6
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ddns-updater
      app.kubernetes.io/instance: dns
  template:
    metadata:
      labels:
        helm.sh/chart: ddns-updater-0.1.6
        app.kubernetes.io/name: ddns-updater
        app.kubernetes.io/instance: dns
        app.kubernetes.io/version: "2.9.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: dns-ddns-updater
      securityContext:
        {}
      containers:
        - name: ddns-updater
          securityContext:
            {}
          image: "qmcgaw/ddns-updater:2.9.0"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          volumeMounts:
          - name: ddns-updater-data
            mountPath: /updater/data
          envFrom:
            - configMapRef:
              name: ddns-updater-config
      volumes:
      - name: ddns-updater-data
        persistentVolumeClaim:
          claimName: dns-ddns-updater
---
# Source: ddns-updater/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dns-ddns-updater
  labels:
    helm.sh/chart: ddns-updater-0.1.6
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    '"cert-manager.io/cluster-issuer"': letsencrypt-wildcard-prod
    '"kubernetes.io/ingress.class"': nginx
    '"nginx.ingress.kubernetes.io/backend-protocol"': HTTP
    '"nginx.ingress.kubernetes.io/force-ssl-redirect"': '"true"'
spec:
  ingressClassName: nginx
  rules:
  - host: ddns.broadways.me
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dns-ddns-updater
            port:
              number: 8000
  tls:
    - hosts:
        - ddns.broadways.me
      secretName: broadways-wildcard-tls-secret
---
# Source: ddns-updater/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "dns-ddns-updater-test-connection"
  labels:
    helm.sh/chart: ddns-updater-0.1.6
    app.kubernetes.io/name: ddns-updater
    app.kubernetes.io/instance: dns
    app.kubernetes.io/version: "2.9.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['dns-ddns-updater:8000']
  restartPolicy: Never
